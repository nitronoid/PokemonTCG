#ifndef BOARD_H
#define BOARD_H

#include "deck.h"
#include "hand.h"
#include "prizecards.h"
#include "discardpile.h"
#include "bench.h"

class Board
{
public:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief returns a pointer to the requested pile
  /// @param [in] _pile the pile to access
  /// @return a CardPile pointer (not casted) to the pile
  //----------------------------------------------------------------------------------------------------------------------
  CardPile* pile(const PTCG::PILE _pile);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief returns a const pointer to the requested pile
  /// @param [in] _pile the pile to access
  /// @return a const CardPile pointer (not casted) to the pile
  //----------------------------------------------------------------------------------------------------------------------
  const CardPile* pile(const PTCG::PILE _pile) const;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief returns a pointer to the deck
  /// @return a Deck pointer (casted).
  //----------------------------------------------------------------------------------------------------------------------
  Deck* deck();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief returns a const pointer to the deck
  /// @return a const Deck pointer (casted).
  //----------------------------------------------------------------------------------------------------------------------
  const Deck* deck() const;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief returns a pointer to the Hand
  /// @return a Hand pointer (casted).
  //----------------------------------------------------------------------------------------------------------------------
  Hand* hand();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief returns a const pointer to the hand
  /// @return a const Hand pointer (casted).
  //----------------------------------------------------------------------------------------------------------------------
  const Hand* hand() const;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief returns a pointer to the discard pile
  /// @return a DiscardPile pointer (casted).
  //----------------------------------------------------------------------------------------------------------------------
  DiscardPile* discardPile();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief returns a const pointer to the discard pile
  /// @return a const DiscardPile pointer (casted).
  //----------------------------------------------------------------------------------------------------------------------
  const DiscardPile* discardPile() const;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief returns a pointer to the prize cards
  /// @return a PrizeCard pointer (casted).
  //----------------------------------------------------------------------------------------------------------------------
  PrizeCards* prizeCards();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief returns a const pointer to the prize cards
  /// @return a const PrizeCard pointer (casted).
  //----------------------------------------------------------------------------------------------------------------------
  const PrizeCards* prizeCards() const;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief default ctor
  //----------------------------------------------------------------------------------------------------------------------
  Board() = default;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief copy ctor
  //----------------------------------------------------------------------------------------------------------------------
  Board(const Board&_original);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief assignment operator
  //----------------------------------------------------------------------------------------------------------------------
  Board& operator=(const Board&);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief default dtor for Board
  //----------------------------------------------------------------------------------------------------------------------
  ~Board() = default;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief bench on this player's board
  //----------------------------------------------------------------------------------------------------------------------
  Bench m_bench;

private:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Alias for ease
  //----------------------------------------------------------------------------------------------------------------------
  using pilePtr = std::unique_ptr<CardPile>;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Array of polymorphic card piles, same order as PTCG::PILE enum
  //----------------------------------------------------------------------------------------------------------------------
  std::array<pilePtr,4> m_piles{{
    pilePtr{new Deck},
    pilePtr{new Hand},
    pilePtr{new DiscardPile},
    pilePtr{new PrizeCards},
  }};
};

#endif // BOARD_H
