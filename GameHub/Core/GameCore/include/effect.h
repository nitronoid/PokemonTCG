#ifndef EFFECT_H
#define EFFECT_H

#include <functional>
#include "pokemonenums.h"

class Game;
using EffectFunc = std::function<void(Game*)>;
using CanPlayFunc = std::function<bool(Game*const)>;

class Effect
{
public:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief default ctor for Effect
  //----------------------------------------------------------------------------------------------------------------------
  Effect() = default;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief default copy ctor for Effect
  //----------------------------------------------------------------------------------------------------------------------
  Effect(const Effect&) = default;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief assignment op for copy ctor for Effect
  //----------------------------------------------------------------------------------------------------------------------
  Effect& operator =(const Effect&) = default;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief ctor for Effect
  //----------------------------------------------------------------------------------------------------------------------
  Effect(
      const EffectFunc _ability,
      const std::string &_name,
      const PTCG::TRIGGER _trigger,
      const PTCG::DURATION _duration,
      const std::function<bool(Game*const)> _canUse = [](auto){return true;}
  ) :
    m_name(_name),
    m_ability(_ability),
    m_trigger(_trigger),
    m_duration(_duration),
    m_canUse(_canUse)
  {}
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief default dtor for Effect
  //----------------------------------------------------------------------------------------------------------------------
  ~Effect() = default;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief getter method for retrieving the trigger of the effect
  /// @return trigger enum
  //----------------------------------------------------------------------------------------------------------------------
  inline PTCG::TRIGGER getTrigger() const { return  m_trigger; }
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief getter method for retrieving the duration of the effect
  /// @return duration enum
  //----------------------------------------------------------------------------------------------------------------------
  inline PTCG::DURATION getDuration() const { return m_duration; }
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief getter method for retrieving the name of the effect
  /// @return name string
  //----------------------------------------------------------------------------------------------------------------------
  inline std::string name() const { return m_name; }
protected:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief method for activating the effect
  /// @param [in] _game reference game instance
  /// @return none
  //----------------------------------------------------------------------------------------------------------------------
  inline void activate(Game& _game) const { m_ability(&_game); }
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief method for validating the effect activation
  /// @param [in] _game reference game instance
  /// @return true/false
  //----------------------------------------------------------------------------------------------------------------------
  inline bool canActivate(Game&_game) const { return m_canUse(&_game);}
private:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the name of the effect
  //----------------------------------------------------------------------------------------------------------------------
  std::string m_name;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the effect function of the effect
  //----------------------------------------------------------------------------------------------------------------------
  EffectFunc m_ability;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the effect trigger
  //----------------------------------------------------------------------------------------------------------------------
  PTCG::TRIGGER m_trigger = PTCG::TRIGGER::NONE;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the duration of the effect
  //----------------------------------------------------------------------------------------------------------------------
  PTCG::DURATION m_duration = PTCG::DURATION::PERMANENT;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief usage validation function stored as variable
  //----------------------------------------------------------------------------------------------------------------------
  std::function<bool(Game*const)> m_canUse = [](auto){return true;};
};

#endif // EFFECT_H
