<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <help_text>goTeam</help_text>
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>848</y>
      <w>352</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>*Game*
--
-m_playerOne : Player
-m_playerTwo : Player
-m_currentPlayer : Player*
-m_turn : unsigned
-m_turnPhase : PHASE
-m_canPlay : std::set&lt;CardType&gt;
--
+clone() : Game
+attack(const unsigned _index) : void
+endTurn() : void
+canPlay(Card* const _card) : bool
+onPlay(Card* const _card) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1000</x>
      <y>584</y>
      <w>280</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>*Player*
--
-m_active : BoardSlot
-m_bench : Bench
-m_prizeCards : PrizeCards
-m_hand : Hand
-m_deck : Deck
-m_discardPile : DiscardPile
-m_canRetreat : bool
--
+playCard(const unsigned _index) : void
+attack(const unsigned _index) : void
+endTurn() : void
+retreat(const unsigned _replacement) : void
+getDummyGame() : Game
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>584</y>
      <w>352</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>*BoardSlot*
--
-m_pokemon : PokemonCard*
-m_damage : int
-m_conditions : std::unordered_set&lt;CONDITION&gt;
-m_energy : std::vector&lt;EnergyCard*&gt;
-m_tool : ToolCard*
-m_basePokemons : std::vector&lt;PokemonCard*&gt;
-m_turnPlayed : const unsigned
--
+setDamage(const int _value) : void
+addCondition(const CONDITION _condition) : void
+removeCondition(const CONDITION _condition) : void
+removeAllConditions() : void
+attachCard(Card* const _card) : void
+detachCard(Card* const _card) : void
+setPokemon(PokemonCard* const _pokemon) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>848</x>
      <y>0</y>
      <w>544</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*&lt;&lt;Abstract&gt;&gt;*
*/Card/*
--
-m_ID : unsigned
-m_name : std::string
-m_ability : Ability
--
#Card(const int)
+addAbility(AbilityFunc _newAbility, const PHASE _phase, const DURATION _duration) : void
+activateAbility(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>232</y>
      <w>504</w>
      <h>248</h>
    </coordinates>
    <panel_attributes>*PokemonCard*
--
-m_hp : const unsigned
-m_type : TYPE
-m_weakness : TYPE
-m_resistance :  TYPE
-m_retreat : int
-m_stage : int
-m_preEvolution : std::string
-m_attacks : std::unordered_map&lt;std::string, AttackFunc&gt;
-m_retreatCost : const unsigned
-m_attackRequirements : std::unordered_map&lt;std::string, std::vector&lt;TYPE&gt; &gt;
--
+PokemonCard(const PokemonCard&amp;)
+PokemonCard&amp; operator=(const PokemonCard&amp;)
+PokemonCard(const unsigned _id, const unsigned _hp, const unsigned _retreatCost, )
+addAttack(AttackFunc _newAttack, const std::vector&lt;TYPE&gt;&amp; _cost) : void
+attack(const Game&amp; _game, const size_t _index) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>232</y>
      <w>208</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>*StadiumCard*
--
+StadiumCard(const unsigned _id)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>248</x>
      <y>112</y>
      <w>896</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>1100.0;10.0;1100.0;80.0;10.0;80.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>528</x>
      <y>232</y>
      <w>456</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*EnergyCard*
--
-m_amount : const unsigned
-m_type : const TYPE
--
+EnergyCard(const unsigned _id, const unsigned _amount, const TYPE&amp; _type)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>736</x>
      <y>112</y>
      <w>408</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>490.0;10.0;490.0;80.0;10.0;80.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1120</x>
      <y>112</y>
      <w>24</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>232</y>
      <w>208</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>*ToolCard*
--
+ToolCard(const unsigned _id)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1472</x>
      <y>232</y>
      <w>208</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>*ItemCard*
--
+ItemCard(const unsigned _id)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1704</x>
      <y>232</y>
      <w>216</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>*SupporterCard*
--
+SupporterCard(const unsigned _id)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1120</x>
      <y>112</y>
      <w>232</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;270.0;80.0;270.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1120</x>
      <y>112</y>
      <w>472</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;570.0;80.0;570.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1120</x>
      <y>112</y>
      <w>704</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;860.0;80.0;860.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1992</x>
      <y>800</y>
      <w>328</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>using AttackFunc = std::function&lt;void(const Game&amp;)&gt;;
using AbilityFunc = AttackFunc;
bg=#f4f38d</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>296</x>
      <y>32</y>
      <w>520</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>*Ability*
--
-m_ability : AbilityFunc
-m_abilityPhase : PHASE
-m_abilityDuration : DURATION
--
+Ability(AbilityFunc _newAbility, const PHASE _phase, const DURATION _duration) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>808</x>
      <y>56</y>
      <w>56</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>240</x>
      <y>472</y>
      <w>296</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>350.0;280.0;10.0;280.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>736</x>
      <y>296</y>
      <w>24</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;360.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1384</x>
      <y>48</y>
      <w>696</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>850.0;340.0;850.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>864</x>
      <y>688</y>
      <w>152</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>170.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>864</x>
      <y>768</y>
      <w>296</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;220.0;350.0;220.0;350.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1424</x>
      <y>496</y>
      <w>240</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*Bench*
--
-m_slots : std::array&lt;BoardSlot,5&gt;
--
+cardAt(const unsigned _index) : Card*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1680</x>
      <y>496</y>
      <w>240</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*PrizeCards*
--
-m_cards :std::array&lt;Card*,6&gt;
--
+peek(const unsigned _index) : Card*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1936</x>
      <y>496</y>
      <w>240</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*Hand*
--
-m_cards : std::vector&lt;Card*&gt;
--
+view() : std::vector&lt;Card*&gt;&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2192</x>
      <y>496</y>
      <w>240</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*Deck*
--
-m_cards : std::vector&lt;Card*&gt;
--
+view() : std::vector&lt;Card*&gt;&amp;
+shuffle() : void


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2448</x>
      <y>496</y>
      <w>240</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*DiscardPile*
--
-m_cards : std::vector&lt;Card*&gt;
--
+view() : std::vector&lt;Card*&gt;&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>824</x>
      <y>520</y>
      <w>616</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>750.0;10.0;10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1272</x>
      <y>560</y>
      <w>1312</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;1620.0;110.0;1620.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1272</x>
      <y>560</y>
      <w>288</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;340.0;110.0;340.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1944</x>
      <y>320</y>
      <w>232</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*&lt;&lt;interface&gt;&gt;*
/*CardPile*/
--
/+put(Card* const _card) : void/
/+take(const unsigned _index) : Card*/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1792</x>
      <y>560</y>
      <w>24</w>
      <h>104</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2048</x>
      <y>560</y>
      <w>24</w>
      <h>104</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2304</x>
      <y>560</y>
      <w>24</w>
      <h>104</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1536</x>
      <y>424</y>
      <w>544</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>660.0;10.0;10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2056</x>
      <y>424</y>
      <w>520</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;630.0;10.0;630.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2296</x>
      <y>424</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1792</x>
      <y>424</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2048</x>
      <y>384</y>
      <w>24</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1832</x>
      <y>800</y>
      <w>144</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>*&lt;&lt;enumeration&gt;&gt;*
*DURATION*
--
SINGLE
MULTIPLE
PERMANENT</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1352</x>
      <y>800</y>
      <w>144</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>*&lt;&lt;enumeration&gt;&gt;*
*TYPE*
--
FIRE
WATER
GRASS
PSYCHIC
FIGHTING
STEEL
DRAGON
FAIRY
DARK
ELECTRIC
COLOURLESS</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1512</x>
      <y>800</y>
      <w>144</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>*&lt;&lt;enumeration&gt;&gt;*
*CONDITION*
--
ASLEEP
BURNED
POISONED
CONFUSED
PARALYZED</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1672</x>
      <y>800</y>
      <w>144</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>*&lt;&lt;enumeration&gt;&gt;*
*PHASE*
--
DRAW
MAIN
ATTACK
NONE</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
